<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ch.sebpiller.epg</groupId>
    <artifactId>epg-scrapper-cli</artifactId>
    <version>${dynamicVersion}</version>
    <packaging>jar</packaging>

    <properties>
        <!-- RELEASE PIPELINE VERSION -->
        <mainVersion>0.0.0
        </mainVersion><!-- default version information, if no more specific information is available -->
        <feature/> <!-- the feature name for feature branches build -->
        <buildNumber/><!-- will be assigned by Jenkins -->
        <modifier>-SNAPSHOT</modifier><!-- replaced with blank for a release deploy -->
        <dynamicVersion>${mainVersion}${feature}${buildNumber}${modifier}</dynamicVersion>

        <jar.entrypoint.class>ch.sebpiller.epg.scrapper.ScrapperSpringBootApplication</jar.entrypoint.class>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>

        <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
        <maven.javadoc.failOnError>false</maven.javadoc.failOnError>

        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ssZ</maven.build.timestamp.format>

        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>

        <skipUTs>false</skipUTs>
        <surefire.jacoco.args/>

        <skipITs>false</skipITs>
        <failsafe.jacoco.args/>

        <jacoco.mincoverage>30%</jacoco.mincoverage>
        <jacoco.ut.mincoverage>${jacoco.mincoverage}</jacoco.ut.mincoverage>
        <jacoco.it.mincoverage>${jacoco.mincoverage}</jacoco.it.mincoverage>
        <failIfNoTests>true</failIfNoTests>

        <enforcer-maven-version.version>3.6.0</enforcer-maven-version.version>
        <puppycrawl-checkstyle.version>8.32</puppycrawl-checkstyle.version>

        <!--================ PLUGINS VERSIONS ==================-->
        <scm-plugin.version>1.11.2</scm-plugin.version>
        <flatten-plugin.version>1.2.7</flatten-plugin.version>
        <antrun-plugin.version>3.0.0</antrun-plugin.version>
        <dependency-plugin.version>3.1.1</dependency-plugin.version>
        <resources-plugin.version>3.2.0</resources-plugin.version>
        <install-plugin.version>3.0.0-M1</install-plugin.version>
        <jar-plugin.version>3.2.0</jar-plugin.version>
        <checkstyle-plugin.version>3.1.2</checkstyle-plugin.version>

        <!-- deploy 2.8.x required to have distribution management configured in settings.xml instead of pom, while
        3.0.0-M1 lead to https://issues.apache.org/jira/browse/MDEPLOY-244 -->
        <deploy-plugin.version>2.8.2</deploy-plugin.version>
        <versions-plugin.version>2.8.1</versions-plugin.version>
        <enforcer-plugin.version>3.0.0-M3</enforcer-plugin.version>
        <project-info-plugin.version>3.1.1</project-info-plugin.version>
        <jacoco-plugin.version>0.8.6</jacoco-plugin.version>
        <assembly-plugin.version>3.3.0</assembly-plugin.version>
        <clean-plugin.version>3.1.0</clean-plugin.version>
        <compiler-plugin.version>3.8.1</compiler-plugin.version>
        <build-helper-plugin.version>3.2.0</build-helper-plugin.version>
        <surefire-plugin.version>3.0.0-M5</surefire-plugin.version>
        <failsafe-plugin.version>3.0.0-M5</failsafe-plugin.version>
        <source-plugin.version>3.2.1</source-plugin.version>
        <site-plugin.version>3.9.1</site-plugin.version>
        <spotbugs-plugin.version>4.2.2</spotbugs-plugin.version>
        <jxr-plugin.version>3.0.0</jxr-plugin.version>
        <kotlin-plugin.version>${kotlin.version}</kotlin-plugin.version>
        <spring-boot-plugin.version>${spring-boot.version}</spring-boot-plugin.version>

        <!--================ DEPENDENCIES VERSIONS ==================-->
        <spring-boot.version>2.6.6</spring-boot.version>
        <kotlin.version>1.4.32</kotlin.version>
        <picocli.version>4.6.1</picocli.version>
        <hibernate-validator.version>6.2.0.Final</hibernate-validator.version>
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <jsoup.version>1.13.1</jsoup.version>
    </properties>

    <name>EPG Scrapper CLI</name>

    <description>A project to scrape EPG (Electronic Program Guide) information from various sources, to populate
        eg. TVHeadend EPG.
    </description>

    <developers>
        <developer>
            <id>sebpiller</id>
            <name>Piller SÃ©bastien</name>
            <email>me@sebpiller.ch</email>
            <organization>none</organization>
            <timezone>+1</timezone>
            <url>https://github.com/sebpiller</url>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <scm>
        <url>scm:git:http://git.home/spiller/epg-scrapper.git</url>
        <connection>scm:git:http://git.home/spiller/epg-scrapper.git</connection>
        <developerConnection>scm:git:http://git.home/spiller/epg-scrapper.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>Gitea</system>
        <url>http://git.home/spiller/epg-scrapper-cli/issues</url>
    </issueManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot-plugin.version}</version>
            <scope>test</scope>
            <!--<exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>-->
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.7.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli-spring-boot-starter</artifactId>
            <version>${picocli.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>2.0.1.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator-annotation-processor</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>3.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>javax.el</artifactId>
            <version>2.2.6</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-core</artifactId>
            <version>3.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
    </dependencies>

    <build>
        <!-- create version infos in a format easily read by code -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>${project.artifactId}.version</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>${project.artifactId}.version</exclude>
                </excludes>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>${flatten-plugin.version}</version>
                    <configuration>
                        <updatePomFile>true</updatePomFile>
                        <flattenMode>resolveCiFriendliesOnly</flattenMode>
                    </configuration>
                    <executions>
                        <execution>
                            <id>flatten</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>flatten</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>flatten.clean</id>
                            <phase>clean</phase>
                            <goals>
                                <goal>clean</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>${scm-plugin.version}</version>
                    <configuration>
                        <tag>${project.artifactId}-${project.version}</tag>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${antrun-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${dependency-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${install-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${resources-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${deploy-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${enforcer-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce-maven</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>${enforcer-maven-version.version}</version>
                                    </requireMavenVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${project-info-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${checkstyle-plugin.version}</version>
                    <configuration>
                        <configLocation>${project.basedir}/checkstyle_custom.xml</configLocation>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${puppycrawl-checkstyle.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-plugin.version}</version>
                    <executions>
                        <!-- Surefire -->
                        <execution>
                            <id>before-unit-test-execution</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <append>false</append>
                                <propertyName>surefire.jacoco.args</propertyName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>after-unit-test-execution</id>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>

                        <!-- Failsafe -->
                        <execution>
                            <id>before-integration-test-execution</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                            <configuration>
                                <append>false</append>
                                <propertyName>failsafe.jacoco.args</propertyName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>after-integration-test-execution</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report-integration</goal>
                            </goals>
                        </execution>

                        <!-- Code coverage threshold -->
                        <execution>
                            <id>check-UT-coverage</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <rule>
                                        <excludes>
                                            <exclude>*Test</exclude>
                                        </excludes>
                                        <limits>
                                            <limit>
                                                <counter>LINE</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>${jacoco.ut.mincoverage}</minimum>
                                            </limit>
                                        </limits>
                                    </rule>
                                </rules>
                            </configuration>
                        </execution>

                        <execution>
                            <id>check-IT-coverage</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <rule>
                                        <excludes>
                                            <exclude>*Test</exclude>
                                        </excludes>
                                        <limits>
                                            <limit>
                                                <counter>LINE</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>${jacoco.it.mincoverage}</minimum>
                                            </limit>
                                        </limits>
                                    </rule>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- NOT needed when packaging with spring-boot-maven-plugin <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${assembly-plugin.version}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <mainClass>${jar.entrypoint.class}</mainClass>
                            </manifest>
                        </archive>
                        <descriptorRefs>
                            <descriptorRef>jar-with-dependencies</descriptorRef>
                        </descriptorRefs>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>install</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>-->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot-plugin.version}</version>
                    <configuration>
                        <!-- sb-executable fix lots of classpath issues: https://stackoverflow.com/a/59993262/5375288 -->
                        <classifier>sb-executable</classifier>
                        <fork>true</fork>
                        <mainClass>${jar.entrypoint.class}</mainClass>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${clean-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${compiler-plugin.version}</version>
                    <configuration>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>info.picocli</groupId>
                                <artifactId>picocli-codegen</artifactId>
                                <version>${picocli.version}</version>
                            </path>
                        </annotationProcessorPaths>
                        <compilerArgs>
                            <arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
                        </compilerArgs>
                    </configuration>
                    <executions>
                        <!-- Replacing default-compile as it is treated specially by maven -->
                        <execution>
                            <id>default-compile</id>
                            <phase>none</phase>
                        </execution>
                        <!-- Replacing default-testCompile as it is treated specially by maven -->
                        <execution>
                            <id>default-testCompile</id>
                            <phase>none</phase>
                        </execution>
                        <execution>
                            <id>java-compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>java-test-compile</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <version>${kotlin-plugin.version}</version>
                    <configuration>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>info.picocli</groupId>
                                <artifactId>picocli-codegen</artifactId>
                                <version>${picocli.version}</version>
                            </path>
                        </annotationProcessorPaths>
                        <compilerPlugins>
                            <plugin>spring</plugin>
                        </compilerPlugins>
                        <args>
                            <arg>-Xjsr305=strict</arg>
                        </args>
                        <javacOptions>
                            <javacOption>-Aproject=${project.groupId}/${project.artifactId}</javacOption>
                        </javacOptions>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-allopen</artifactId>
                            <version>${kotlin.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>compile</id>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                                    <sourceDir>${project.basedir}/src/main/java</sourceDir>
                                </sourceDirs>
                            </configuration>
                        </execution>
                        <execution>
                            <id>test-compile</id>
                            <goals>
                                <goal>test-compile</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                    <sourceDir>${project.basedir}/src/test/java</sourceDir>
                                </sourceDirs>
                            </configuration>
                        </execution>
                        <execution>
                            <id>integration-test-compile</id>
                            <goals>
                                <goal>test-compile</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/src/it/kotlin</sourceDir>
                                    <sourceDir>${project.basedir}/src/it/java</sourceDir>
                                </sourceDirs>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>add-kotlin-sources</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.basedir}/src/main/kotlin</source>
                                </sources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>add-integration-test-source</id>
                            <phase>generate-test-sources</phase>
                            <goals>
                                <goal>add-test-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>src/it/java</source>
                                </sources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>add-integration-test-resource</id>
                            <phase>generate-test-resources</phase>
                            <goals>
                                <goal>add-test-resource</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>src/it/resources</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <!-- surefire 3.x required for junit 5 -->
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire-plugin.version}</version>

                    <configuration>
                        <argLine>@{surefire.jacoco.args}</argLine>
                        <skipTests>${skipUTs}</skipTests>
                        <excludes>
                            <!-- Do not process integration tests with surefire. Failsafe will do the job -->
                            <exclude>**/*IntegrationTest.java</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${failsafe-plugin.version}</version>

                    <configuration>
                        <!-- beware of timeouts -->
                        <forkedProcessTimeoutInSeconds>0</forkedProcessTimeoutInSeconds>
                        <forkedProcessExitTimeoutInSeconds>0</forkedProcessExitTimeoutInSeconds>
                        <testSourceDirectory>${project.basedir}/src/it/java</testSourceDirectory>
                        <includes>
                            <include>**/*IntegrationTest.java</include>
                        </includes>
                        <argLine>@{failsafe.jacoco.args}</argLine>
                    </configuration>
                    <executions>
                        <execution>
                            <id>run-integration-test</id>
                            <phase>integration-test</phase>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify-integration-test</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>build-sources-jar</id>
                            <phase>site</phase>
                            <configuration>
                                <attach>true</attach>
                            </configuration>
                            <goals>
                                <goal>jar-no-fork</goal>
                                <goal>test-jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${site-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-plugin.version}</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <xmlOutputDirectory>target/site</xmlOutputDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependency-updates-report</report>
                            <report>plugin-updates-report</report>
                            <report>property-updates-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <report>summary</report>
                            <report>mailing-lists</report>
                            <report>team</report>
                            <report>scm</report>

                            <report>modules</report>
                            <report>licenses</report>

                            <report>issue-management</report>
                            <report>ci-management</report>
                            <report>distribution-management</report>

                            <report>plugins</report>
                            <report>plugin-management</report>

                            <report>dependencies</report>
                            <report>dependency-convergence</report>
                            <report>dependency-info</report>
                            <report>dependency-management</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                            <report>report-integration</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${jxr-plugin.version}</version>
            </plugin>
        </plugins>
    </reporting>

</project>